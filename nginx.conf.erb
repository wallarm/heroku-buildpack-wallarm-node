daemon off;
#Heroku dynos have at least 4 cores.
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

events {
	use epoll;
	accept_mutex on;
	worker_connections 1024;
}

error_log <%= ENV['NGINX_ERRORLOG'] %>;

http {
	gzip on;
	gzip_comp_level 2;
	gzip_min_length 512;

	server_tokens off;

	log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
	access_log <%= ENV['NGINX_ACCESSLOG'] %> l2met;

	include mime.types;
	default_type application/octet-stream;
	sendfile on;

	#Must read the body in 5 seconds.
	client_body_timeout 5;

	upstream app_server {
		server <%= ENV['WALLARM_BACKEND'] %> fail_timeout=0;
	}

	wallarm_mode <%= ENV['WALLARM_MODE'] %>;
	wallarm_key_path <%= ENV['WALLARM_LICENSEKEY'] %>;
	wallarm_global_trainingset_path <%= ENV['WALLARM_PROTONDB'] %>;
	wallarm_local_trainingset_path <%= ENV['WALLARM_LOM'] %>;

	set_real_ip_from 10.0.0.0/8;
	real_ip_header X-Forwarded-For;
	real_ip_recursive on;

	server {
		listen <%= ENV["PORT"] %>;
		server_name _;
		keepalive_timeout 5;

		location / {
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $http_host;
			proxy_redirect off;
			proxy_pass http://app_server;
		}

		location = /wallarm-status {
			allow 127.0.0.1;
			allow ::1;
			deny all;
			wallarm_status on;
			access_log off;
		}
	}
}
